[{"path":"https://janikmiet.github.io/healthpopR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Jani Miettinen Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-handling.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Data Handling","text":"document gives idea kind data correct use package functions demonstrates classifying functions.","code":"library(dplyr) library(healthpopR)"},{"path":"https://janikmiet.github.io/healthpopR/articles/data-handling.html","id":"load-data","dir":"Articles","previous_headings":"Description","what":"Load data","title":"Data Handling","text":"population data variables: diagnoses data variables: diagnoses data create also variables: ICD10_3LETTERS | ICD10 code. Diagnose Code first 3 letters | ICD10_CLASS | ICD10 code. ICD-10 Diagnose Class (Ex. E00–E90, H60–H95, H00–H59) | DATE_BIRTH | Day patient birth | AGE | murtumat Patient age diagnose date | population_variables variables: bmi categorized variables.","code":"# synthetic raw datasets population <- arrow::read_parquet(\"../data/synth_population.parquet\") diagnoses <- arrow::read_parquet(\"../data/synth_diagnoses.parquet\") population_variables <- arrow::read_parquet(\"../data/synth_population_variables.parquet\")"},{"path":"https://janikmiet.github.io/healthpopR/articles/data-handling.html","id":"categorize-icd-10-diagnoses","dir":"Articles","previous_headings":"Description","what":"Categorize ICD-10 Diagnoses","title":"Data Handling","text":"ICD-10 Codes useful categorize 3 Letters upper category:","code":"diagnoses <- diagnoses %>%    mutate(     ICD10_3LETTERS = healthpopR::recode_icd10_3letters(DG, DGREG = DGREG),     ICD10_CLASS = healthpopR::recode_icd10_class(ICD10_3LETTERS, DGREG = DGREG)   ) %>%    left_join(population %>% select(ID, DATE_BIRTH), by = \"ID\") %>%    mutate(AGE = floor(lubridate::time_length(difftime(DATE, DATE_BIRTH), \"years\")))"},{"path":"https://janikmiet.github.io/healthpopR/articles/data-handling.html","id":"categorize-population_variables-bmi","dir":"Articles","previous_headings":"Description","what":"Categorize population_variables BMI","title":"Data Handling","text":"BMI can categorized 4 6 category classes. can use variables Cox model future.","code":"population_variables <- population_variables %>%    mutate(     bmi_cat1 = factor(healthpopR::categorize_bmi(bmi, levels = 6)),     bmi_cat2 = factor(healthpopR::categorize_bmi(bmi, levels = 4)),     edu = factor(edu)   )"},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Data Model","text":"healthpopR functions uses follow datasets, fixed variable names. document describes variables names. can get idea shape datasets needed.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"population","dir":"Articles","previous_headings":"","what":"population","title":"Data Model","text":"Population data include one row per ID DATE variables.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"diagnoses","dir":"Articles","previous_headings":"","what":"diagnoses","title":"Data Model","text":"Diagnoses data follow-patients diagnoses timeline.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"other-datasets","dir":"Articles","previous_headings":"","what":"other datasets","title":"Data Model","text":"modified future. Now used cox modelling phases","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"data_sosioeconomic","dir":"Articles","previous_headings":"other datasets","what":"data_sosioeconomic","title":"Data Model","text":"Data Sosioeconomic includes extra variables population data.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/data-model.html","id":"data_dates","dir":"Articles","previous_headings":"other datasets","what":"data_dates","title":"Data Model","text":"Data dates include date variables population.","code":""},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"getting-started","text":"Assuming created datasets ready use analyzed. can load datasets use. Let’s define sample case interest.","code":"loc = \"data/\"  population <- arrow::read_parquet(file = paste0(loc, \"population.parquet\")) diagnoses <- arrow::read_parquet(file = paste0(loc, \"diagnoses.parquet\")) data_dates <- arrow::read_parquet(file = paste0(loc, \"data_dates.parquet\")) population_variables <- arrow::read_parquet(file = paste0(loc, \"population_variables.parquet\")) selected_exposure_icd10 = \"^E11\" selected_exposure_icd9 = \"^250A\" selected_exposure_icd8 = \"^250\" selected_exposure_regsrc = c(\"avohilmo\", \"erko\", \"hilmo\", \"local\", \"ksyy\", \"soshilmo\", \"syopa\") selected_response_icd10 = \"^I2[0-5]\" selected_response_icd9 = \"^41[0-4]\" selected_response_icd8 = \"^41[0-4]\" selected_response_regsrc = c(\"avohilmo\", \"erko\", \"hilmo\", \"local\", \"ksyy\", \"soshilmo\", \"syopa\")"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"diagnoses-data","dir":"Articles","previous_headings":"","what":"Diagnoses data","title":"getting-started","text":"Creating exposure diagnosis data Creating response diagnosis data Checking registry sources found diagnoses","code":"exposure_diagnoses <- search_diagnoses(   regex_icd10 = selected_exposure_icd10,   regex_icd9 = selected_exposure_icd9,   regex_icd8 = selected_exposure_icd8,   registry_source = selected_exposure_regsrc,   data_diagnoses = diagnoses ) response_diagnoses <- search_diagnoses(   regex_icd10 = selected_response_icd10,   regex_icd9 = selected_response_icd9,   regex_icd8 = selected_response_icd8,   registry_source = selected_response_regsrc,   data_diagnoses = diagnoses ) plot_diagnoses_src(exposure_diagnoses) plot_diagnoses_src(response_diagnoses, per_source = TRUE)"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"population-data","dir":"Articles","previous_headings":"","what":"Population Data","title":"getting-started","text":"Just exposure population without exposure codes , exposure response population one","code":"dpop_exposure <- classify_population(   exposure_icd10 = selected_exposure_icd10,   exposure_src = selected_exposure_regsrc) dpop <- classify_population(exposure_icd10 = selected_exposure_icd10,                      exposure_icd9 = selected_exposure_icd9,                      exposure_icd8 = selected_exposure_icd8,                      exposure_src = selected_exposure_regsrc,                      response_icd10 = selected_response_icd10,                      response_icd9 = selected_response_icd9,                      response_icd8 = selected_response_icd8,                      response_src = selected_response_regsrc)"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"population-analytics","dir":"Articles","previous_headings":"","what":"Population Analytics","title":"getting-started","text":"Exposure age distribution Response age distribution Age Distribution Tables Summaries Exposure Response Diagnoses","code":"plot_age_distribution(dpop, group = \"exposure\") plot_age_distribution(dpop, group = \"exposure\", subgroups = TRUE) plot_age_distribution(dpop, group = \"response\") plot_age_distribution(dpop, group = \"response\", subgroups = TRUE) table_age_distribution(dpop, group = \"exposure\") table_age_distribution(dpop, group = \"response\") table_age_distribution(dpop, group = \"response\", subgroups = TRUE) table_age_distribution(dpop, group = \"exposure\", subgroups = TRUE) summary_exp_resp_order(dpop) summary_exp_resp_crosstabulation(dpop, output = \"viewer\")"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"health-analytics","dir":"Articles","previous_headings":"","what":"Health Analytics","title":"getting-started","text":"Creating ICD-10 profile group Finding top ICD-10 diagnoses exposure group (compared -exposure group)","code":"health_profiles <- classify_icd10_profile(dpop, diagnoses = diagnoses, exposure_icd10 = selected_exposure_icd10, exposure_src = selected_exposure_regsrc) plot_health_icd10_profile(health_profiles) tbl_health <- tbl_icd10_diff_by_exposure(dpop, diagnoses = diagnoses, exposure_icd10 = selected_exposure_icd10, exposure_src = selected_exposure_regsrc) plot_icd10_diff_by_exposure(tbl_health)"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"survival-analysis","dir":"Articles","previous_headings":"","what":"Survival Analysis","title":"getting-started","text":"Creating survival object plotting Kaplan Meier Competing Risk","code":"dsurv <- create_dsurv(dpop,                        censoring_date = as.Date(\"2023-12-21\"),                        filter_early_responses = FALSE) plot_survival_km(dsurv) plot_survival_cr(dsurv)"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"cox-analysis","dir":"Articles","previous_headings":"","what":"Cox Analysis","title":"getting-started","text":"development currently relying two extra datasets data_dates data_socioeconomic, still development scaling universal format. Creating cox dataset Plotting survival element Creating model Cox analysis Checking spline variable packages good functions create plots","code":"cox_base <- cox_create_data(dpop,                              data_dates = ostpre_vastpaiv,                              data_socioeconomic = edumiage,                             reference_values = list(\"bmi_cat1\" = \"Healthy Weight\",                                                      \"bmi_cat2\" = \"Healthy Weight\",                                                      \"edu\" = \"3 - High\"),                             censoring_date = as.Date(\"2023-12-31\")) cox_plot_overall(cox_base, type = \"event\") model1 <- create_cox_model(cox_base,                              normal_vars = c(\"edu\"),                             spline_vars = c(\"age_bs\", \"bmi\")                             ) cox_plot_spline(model1, spline_var = \"age_bs\") ftest <- survival::cox.zph(model1) survminer::ggcoxzph(ftest) testmodel <- survival::coxph(as.formula(paste(deparse(model1$formula), collapse = \" \")),                    data =  cox_base) survminer::ggforest(testmodel)"},{"path":"https://janikmiet.github.io/healthpopR/articles/getting-started.html","id":"poisson-regression-model-sir","dir":"Articles","previous_headings":"","what":"Poisson Regression Model (SIR)","title":"getting-started","text":"functions still bit use case defined, may work properly, data differs data dataset. case selected interested exposure response diagnoses, can calculate plot SIR values. Analyzes given list format back. Another example can dataset included fractures, check outcomes fractures data. Analyzes given list format back.","code":"dpirr <- pirr_data(d_exposure = exposure_diagnoses,                     d_response = response_diagnoses,                     d_population = dpop,                    var_age_start = 50 ) results1 <- pirr_results(adat = dpirr) ## DG dpirr2 <- pirr_data(d_exposure = exposure_diagnoses,                      d_response = diagnoses %>% filter(DGREG == \"FRACTURES\" ),                      d_population = dpop,                     dg_list = list(any_fracture = \"ankle+forearm+hip+humerus+vertebral\",                                    ostheoporotic = \"forearm+hip+humerus+vertebral\"                     )) results2 <- pirr_results(adat = dpirr2)"},{"path":"https://janikmiet.github.io/healthpopR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jani Miettinen. Author, maintainer. Reijo Sund. Author.","code":""},{"path":"https://janikmiet.github.io/healthpopR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Miettinen J, Sund R (2025). healthpopR: Explore Exposure Response diagnoses connection R. R package version 0.1.8, https://github.com/janikmiet/healthpopR.","code":"@Manual{,   title = {healthpopR: Explore Exposure and Response diagnoses connection with R},   author = {Jani Miettinen and Reijo Sund},   year = {2025},   note = {R package version 0.1.8},   url = {https://github.com/janikmiet/healthpopR}, }"},{"path":"https://janikmiet.github.io/healthpopR/index.html","id":"welcome-to-healthpopr","dir":"","previous_headings":"","what":"Explore Exposure and Response diagnoses connection with R","title":"Explore Exposure and Response diagnoses connection with R","text":"healthpopR helps researchers analysts classify populations exposure response groups, visualize ICD-10-based health profiles, perform survival Cox regression analysis using tidy workflows. package designed analyzing exposure diagnoses affect response diagnoses population health data research. Package uses regex code identifying ICD-10/9/8 codes. Check Quick Example motivation.","code":""},{"path":"https://janikmiet.github.io/healthpopR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Explore Exposure and Response diagnoses connection with R","text":"Install development version GitHub:","code":"# Install devtools if needed install.packages(\"devtools\")  # Install healthpopR remotes::install_github(\"janikmiet/healthpopR\")"},{"path":"https://janikmiet.github.io/healthpopR/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick Example","title":"Explore Exposure and Response diagnoses connection with R","text":"Package uses regex search diagnoses. ’s classify population exposure response groups, Exposure ICD-10 code E11 (Type 2 diabetes mellitus) Response ICD-10 codes I20-I25 (Ischemic heart diseases) diagnoses dataset use 2 registry sources local hilmo. Check data model -vignette view arrange population diagnoses -datasets.","code":"library(healthpopR)  ## Load Datasets population <- read.csv(\"your_population_data.csv\") diagnoses <- read.csv(\"your_diagnoses_data.csv\") ## Classify population dpop <- classify_population(diagnoses,                     exposure_icd10 = \"^E11\",                     exposure_src = c(\"local\", \"hilmo\"),                     response_icd10 = \"^I2[0-5]\",                     response_src = c(\"local\", \"hilmo\"),                     data_population = population,                     data_diagnoses = diagnoses) head(dpop)"},{"path":"https://janikmiet.github.io/healthpopR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Explore Exposure and Response diagnoses connection with R","text":"📊 Population classification: classify_population(), classify_icd10_profile() 🧠 ICD-10 diagnostics: plot_diagnoses_src(), plot_health_icd10_profile() ⏳ Survival analysis: plot_survival_km(), cox_create_data(), cox_plot_spline() 📈 Comparison tools: summary_exp_resp_order(), tbl_icd10_diff_by_exposure() 📊 Incidence modeling tools: pirr_results()","code":""},{"path":"https://janikmiet.github.io/healthpopR/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Explore Exposure and Response diagnoses connection with R","text":"Data Model Data Handling Getting Started Guide Functions Reference Manual","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/categorize_bmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize BMI values into clinical weight categories — categorize_bmi","title":"Categorize BMI values into clinical weight categories — categorize_bmi","text":"Categorizes BMI values 4 6 clinical categories ordered factors, \"Healthy Weight\" reference level.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/categorize_bmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize BMI values into clinical weight categories — categorize_bmi","text":"","code":"categorize_bmi(bmi, levels = 4)"},{"path":"https://janikmiet.github.io/healthpopR/reference/categorize_bmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize BMI values into clinical weight categories — categorize_bmi","text":"bmi numeric vector BMI values. levels Integer. Use 4 : Underweight, Healthy Weight, Overweight, Obesity. Use 6 detailed obesity classification.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/categorize_bmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize BMI values into clinical weight categories — categorize_bmi","text":"ordered factor \"Healthy Weight\" reference level.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/categorize_bmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize BMI values into clinical weight categories — categorize_bmi","text":"","code":"df <- tibble::tibble(bmi = c(17, 22, 27, 32, 37, 42, NA)) df %>% dplyr::mutate(   bmi_cat4 = categorize_bmi(bmi, levels = 4),   bmi_cat6 = categorize_bmi(bmi, levels = 6) ) #> Error in df %>% dplyr::mutate(bmi_cat4 = categorize_bmi(bmi, levels = 4),     bmi_cat6 = categorize_bmi(bmi, levels = 6)): could not find function \"%>%\""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"function creates summary table ICD-10 diagnosis class distributions across exposure groups, excluding diagnoses matching specified ICD-10 pattern (e.g., exposure-defining diagnosis). calculates patient percentages per diagnosis class reshapes result wide-format matrix suitable plotting (e.g., radar charts heatmaps).","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"","code":"classify_icd10_profile(   data,   diagnoses = diagnoses,   exposure_icd10 = \"\",   exposure_src = c(\"\") )"},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"data data frame containing study population least columns `ID` `exp.GROUP`, `exp.GROUP` distinguishes exposure non-exposure groups. Can created classify_population() -function. diagnoses Original data frame diagnoses must include columns `ID`, `DGREG`, `DG`, `SRC`, `ICD10_CLASS`. exposure_icd10 regular expression string defines ICD-10 diagnosis used define exposure group. Diagnoses matching pattern excluded analysis. exposure_src character vector source types (e.g., `\"avohilmo\"`, `\"hilmo\"`, etc.) include filtering.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"wide-format data frame ICD-10 class percentages exposure group. Includes artificial `\"Max\"` `\"Min\"`   rows (100 0) visualization purposes.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"function internally calculates: - Population sizes exposure group - Diagnosis counts patient counts per ICD-10 class - Percentages patients per group diagnosis class run inside Shiny application, display progress bars using `withProgress()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_icd10_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify ICD-10 Profiles by Exposure Group — classify_icd10_profile","text":"","code":"if (FALSE) { # \\dontrun{ classify_icd10_profile(   data = dpop,   diagnoses = diagnoses,   exposure_icd10 = \"^E11\",   exposure_src = c(\"avohilmo\", \"hilmo\", \"erko\", \"local\") ) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","title":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","text":"function identifies individuals exposure diagnoses (optionally response diagnoses) based ICD-10/9/8 codes selected registry sources. returns dataset grouped individuals exposure (optionally response) classifications, diagnosis dates, relevant metadata. Function searches first diagnose date, given exposure/response diagnose date.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","text":"","code":"classify_population(   exposure_icd10 = \"\",   exposure_icd9 = \"\",   exposure_icd8 = \"\",   exposure_src = c(\"\"),   response_icd10 = NULL,   response_icd9 = NULL,   response_icd8 = NULL,   response_src = c(\"\"),   data_population = population,   data_diagnoses = diagnoses,   runtime_shiny = FALSE )"},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","text":"exposure_icd10 character vector ICD-10 codes (regex-supported) identify exposure group. exposure_icd9 character vector ICD-9 codes (regex-supported) identify exposure group. exposure_icd8 character vector ICD-8 codes (regex-supported) identify exposure group. exposure_src character vector registry sources used search exposure diagnoses. response_icd10 Optional character vector ICD-10 codes response group (default: NULL). response_icd9 Optional character vector ICD-9 codes response group (default: NULL). response_icd8 Optional character vector ICD-8 codes response group (default: NULL). response_src character vector registry sources used search response diagnoses. data_population data frame target population (default: `population`). data_diagnoses data frame diagnoses (default: `diagnoses`). runtime_shiny Logical; TRUE run inside Shiny app, shows progress bar (default: FALSE).","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","text":"data frame exposure (optionally response) group classifications metadata,         including ID, birth/death/migration dates, diagnosis info, binary indicators exposure/response.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/classify_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Exposure and Optional Response Groups from Diagnoses — classify_population","text":"","code":"classify_population(exposure_icd10 = \"I21\", exposure_src = \"hilmo\") #> Error in classify_population(exposure_icd10 = \"I21\", exposure_src = \"hilmo\"): object 'diagnoses' not found classify_population(exposure_icd10 = \"F32\", response_icd10 = \"I21\") #> Error in classify_population(exposure_icd10 = \"F32\", response_icd10 = \"I21\"): object 'diagnoses' not found"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"Prepares dataset survival analysis time-dependent covariates using `tmerge`. function computes baseline age, time variables exposure response, creates survival object appropriate censoring.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"","code":"cox_create_data(   data,   data_dates,   data_socioeconomic,   reference_values = list(bmi_cat1 = \"Healthy Weight\", bmi_cat2 = \"Healthy Weight\", edu =     \"1 - Low\"),   censoring_date = as.Date(\"2023-12-31\") )"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"data data frame baseline population information, including dates like `DATE_BIRTH`, `DATE_DEATH`, `DATE_MIGRATION`, `exp.DATE`, `resp.DATE`. data_dates data frame containing answering dates per individual. Must include `ID`, `spvm` (start date), `vpvmbl` (baseline date). data_socioeconomic data frame containing socioeconomic variables education level. Must include `ID` covariates relevelled (e.g., `edu`, `bmi_cat1`, `bmi_cat2`). reference_values named list specifying reference level factor variables (e.g., `list(\"bmi_cat1\" = \"Healthy Weight\", \"edu\" = \"1 - Low\")`). Used relevel factors Cox regression. censoring_date `Date` object indicating end follow-censoring. Default `\"2023-12-31\"`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"data frame formatted survival analysis, containing time-dependent covariates,         `tstart`, `tstop`, event indicators (`diagnose`, `exposure`), `Surv` object         ready use `coxph`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"- function internally computes time--event censoring variables. - Uses `tmerge` incorporate time-dependent covariates exposure outcome. - Applies reference level adjustments via `.relevel_by_reference()` (must defined elsewhere).","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_create_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Time-to-Event Data for Cox Proportional Hazards Modeling — cox_create_data","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage result <- cox_create_data(data = dpop,                           data_dates = ostpre_vastpaiv,                           data_socioeconomic = edumiage) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Survival Curves from Cox Model Data — cox_plot_overall","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"Visualizes survival information using different representations (events, cumulative hazard, survival percentage) exposure groups based precomputed survival object.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"","code":"cox_plot_overall(   data,   type = c(\"event\", \"cumhaz\", \"pct\"),   colors_exposure_groups = c(\"#5BC0DE\", \"#D9534F\"),   legend_labels = c(\"No exposure\", \"Exposure\"),   conf_int = TRUE,   risk_table = FALSE )"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"data data frame containing survival object (e.g., `Surv`) exposure variable. survival object must already computed (typically `cox_create_data()`), data ready plotting. type Character string indicating type plot generate. Options : `\"event\"` number events time, `\"cumhaz\"` cumulative hazard, `\"pct\"` survival percentage. Default `\"pct\"`. colors_exposure_groups character vector color codes exposure groups. Default Bootstrap-themed: `c(\"#5BC0DE\", \"#D9534F\")`. legend_labels character vector labels exposure groups shown legend. Default `c(\"exposure\", \"Exposure\")`. conf_int Logical. Whether display confidence intervals (applies `type = \"pct\"`). Default `TRUE`. risk_table Logical. Whether include risk table survival plot (applies `type = \"pct\"`). Default `FALSE`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"`ggsurvplot` object, can printed modified `ggplot2` functions.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"function expects input data already include survival object named `Surv`, one created via `Surv(tstart, tstop, diagnose)` within `cox_create_data()`. exposure variable also present appropriately formatted.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Survival Curves from Cox Model Data — cox_plot_overall","text":"","code":"if (FALSE) { # \\dontrun{ plot <- cox_plot_overall(   data = cox_base,   type = \"pct\",   colors_exposure_groups = c(\"#5BC0DE\", \"#D9534F\"),   legend_labels = c(\"No exposure\", \"Exposure\"),   conf_int = TRUE,   risk_table = TRUE ) print(plot) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"Generates plot showing spline-transformed effect continuous variable Cox model using predicted marginal effects confidence intervals.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"","code":"cox_plot_spline(   data_model,   spline_var = \"age_bs\",   title = \"Spline effect\",   xlab = NULL,   ylab = \"Predicted risk\",   color = \"#0072B2\" )"},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"data_model fitted Cox proportional hazards model object created `coxph()` spline terms (e.g., using `splines::bs()`). spline_var Character string specifying name spline variable model visualize (e.g., `\"age_bs\"` `\"bmi\"`). title Character string specifying title plot. Default `\"Spline effect\"`. xlab Optional label x-axis. `NULL`, variable name used. ylab Label y-axis. Default `\"Predicted risk\"`. color Character string valid color line confidence ribbon. Default Bootstrap blue `\"#0072B2\"`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"`ggplot` object showing effect spline-transformed variable confidence ribbon.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"function uses `ggeffects::ggpredict()` compute marginal effects across full range spline variable. assumes model created using natural splines via `splines::bs()` includes variable named `spline_var`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/cox_plot_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Spline Effect from Cox Proportional Hazards Model — cox_plot_spline","text":"","code":"if (FALSE) { # \\dontrun{ library(survival) library(splines)  # Example model with spline model <- coxph(Surv(time, status) ~ splines::bs(age, df = 4), data = lung)  # Plot the spline effect p <- cox_plot_spline(model, spline_var = \"age\", title = \"Effect of Age\") print(p) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"Constructs Cox model using survival formula allows inclusion regular covariates spline-transformed continuous variables.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"","code":"create_cox_model(   data,   normal_vars = c(\"edu\"),   spline_vars = c(\"age_bs\", \"bmi\"),   surv_formula = \"Surv(tstart, tstop, diagnose) ~ exposure\",   id_var = \"ID\" )"},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"data data frame containing variables required model, including survival time variables covariates. normal_vars character vector covariate names included standard (non-spline) variables model (e.g., `\"edu\"`). spline_vars character vector continuous variables natural cubic splines used (via `splines::bs()`). surv_formula character string specifying survival outcome `Surv()` notation. Currently parsed dynamically; function uses `Surv(tstart, tstop, diagnose)` internally. id_var string giving column name individual-level IDs used `coxph()` call.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"object class `coxph` representing fitted Cox proportional hazards model.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"- function validates variable presence ensures spline variables entirely missing (`NA`). - Splines applied using `splines::bs()` specified `spline_vars`. - survival object internally defined `Surv(tstart, tstop, diagnose)`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_cox_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Cox Proportional Hazards Model with Splines and Covariates — create_cox_model","text":"","code":"if (FALSE) { # \\dontrun{ model <- create_cox_model(   data = cox_base,   normal_vars = c(\"edu\"),   spline_vars = c(\"age_bs\", \"bmi\") ) summary(model) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"Processes raw exposure-response data long-format dataset suitable survival analysis,              including response, death, censoring times. Supports use Shiny progress tracking.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"","code":"create_dsurv(   data,   censoring_date = as.Date(\"2023-12-21\"),   filter_early_responses = FALSE )"},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"data data frame must include columns: `ID`, `exp.GROUP`, `exp.DATE`, `resp.DATE`, `DATE_DEATH`, `DATE_MIGRATION`. used calculate event censoring times. censoring_date `Date` object specifying administrative censoring date. Default `\"2023-12-21\"`. filter_early_responses Logical; `TRUE`, responses occurring exposure date (negative time) filtered . `FALSE`, included recoded 0. Default `FALSE`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"data frame long format columns: ID Subject ID name Type event: `\"diagnose\"`, `\"dead\"`, `\"censoring\"` value Time (days) exposure event","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"function intended support dynamic survival model construction. handles competing risks (response, death, censoring) can run inside Shiny app progress bar support via `.safe_inc_progress()`. Internally, filters summarizes earliest valid event per subject.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/create_dsurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Long-Format Survival Data from Exposure-Response Events — create_dsurv","text":"","code":"if (FALSE) { # \\dontrun{ dsurv <- create_dsurv(   data = exposure_response_df,   censoring_date = as.Date(\"2023-12-31\"),   filter_early_responses = TRUE ) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/data_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnoses Code Descriptions — data_codes","title":"Diagnoses Code Descriptions — data_codes","text":"dataset containing mappings diagnosis codes descriptions.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/data_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnoses Code Descriptions — data_codes","text":"","code":"data_codes"},{"path":"https://janikmiet.github.io/healthpopR/reference/data_codes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diagnoses Code Descriptions — data_codes","text":"data frame columns: DG Diagnosis code CODECLASS ICD Diagnose Class: ICD10, ICD9 ICD8 CATEGORY Summary Level Diagnose Category DESC Description Diagnosis","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/data_codes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diagnoses Code Descriptions — data_codes","text":"ICD8 Codes https://www.julkari.fi/handle/10024/135324, ICD9 Codes https://www.julkari.fi/handle/10024/131850, ICD10 Codes https://koodistopalvelu.kanta.fi/codeserver/pages/classification-view-page.xhtml?classificationKey=23","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-capitalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize the First Letter of a String — .capitalize","title":"Capitalize the First Letter of a String — .capitalize","text":"function takes character string returns string first letter converted uppercase remaining letters converted lowercase.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-capitalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize the First Letter of a String — .capitalize","text":"","code":".capitalize(s)"},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-capitalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize the First Letter of a String — .capitalize","text":"s character string capitalized.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-capitalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalize the First Letter of a String — .capitalize","text":"character string first letter capitalized rest lowercase.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-capitalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalize the First Letter of a String — .capitalize","text":"","code":".capitalize(\"hello\")   # \"Hello\" #> Error in .capitalize(\"hello\"): could not find function \".capitalize\" .capitalize(\"WORLD\")   # \"World\" #> Error in .capitalize(\"WORLD\"): could not find function \".capitalize\" .capitalize(\"rStuDio\") # \"Rstudio\" #> Error in .capitalize(\"rStuDio\"): could not find function \".capitalize\""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-regex_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Diagnosis Regex Strings — .regex_clean","title":"Clean Diagnosis Regex Strings — .regex_clean","text":"Prepares diagnosis code regular expressions removing spaces converting uppercase.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-regex_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Diagnosis Regex Strings — .regex_clean","text":"","code":".regex_clean(dglist)"},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-regex_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Diagnosis Regex Strings — .regex_clean","text":"dglist character. string vector diagnosis code patterns.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-regex_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Diagnosis Regex Strings — .regex_clean","text":"character vector spaces removed converted uppercase.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-regex_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Diagnosis Regex Strings — .regex_clean","text":"","code":"regex_clean(\"e11 \") #> Error in regex_clean(\"e11 \"): could not find function \"regex_clean\" regex_clean(c(\" i10\", \" E11 \")) #> Error in regex_clean(c(\" i10\", \" E11 \")): could not find function \"regex_clean\""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Relevel Factor Variables by Reference — .relevel_by_reference","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"Internal helper function relevel specified factor variables data frame              using user-defined reference values.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"","code":".relevel_by_reference(df, reference_values)"},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"df data frame containing variables releveled. reference_values named list specifying desired reference level variable. Names match column names `df`; values valid levels.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"original data frame specified factor variables releveled given reference.         variable found data frame, warning issued variable skipped.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"function typically used modeling ensure categorical variables          appropriate reference level, particularly computing contrasts regression models.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-relevel_by_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relevel Factor Variables by Reference — .relevel_by_reference","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(group = factor(c(\"A\", \"B\", \"A\", \"C\"))) ref_vals <- list(group = \"B\") df <- .relevel_by_reference(df, ref_vals) levels(df$group)  # \"B\" will now be the reference level } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely Increment Shiny Progress Bar — .safe_inc_progress","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"helper function safely increments Shiny progress bar Shiny app running within reactive context.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"","code":".safe_inc_progress(amount = 1)"},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"amount Numeric value indicating much increment progress bar . Default 1.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"return value; called side effect updating progress bar.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"function checks whether Shiny application running whether valid reactive domain calling `shiny::incProgress()`. prevents errors progress bar used outside reactive environment testing/non-interactive use.","code":""},{"path":[]},{"path":"https://janikmiet.github.io/healthpopR/reference/dot-safe_inc_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safely Increment Shiny Progress Bar — .safe_inc_progress","text":"","code":"if (FALSE) { # \\dontrun{ withProgress(message = \"Loading...\", {   for (i in 1:10) {     safe_inc_progress(0.1)     Sys.sleep(0.1)   } }) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"function merges exposure, response, population-level data produce aggregated dataset person-time event rate analysis (e.g., Standardized Incidence Ratios Incidence Rate Ratios). allows comparison disease occurrence across different exposure time windows.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"","code":"pirr_data(   d_exposure,   d_response,   d_population,   var_age_start = 50,   dg_list = NA,   censoring_date = as.Date(\"2022-12-31\"),   limits = c(0.3, 3) )"},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"d_exposure `data.frame` exposure diagnoses least `ID`, `DATE`, `DG` columns. Created function `search_diagnoses()`. d_response `data.frame` response diagnoses least `ID`, `DATE`, `DG` columns. Created function `search_diagnoses()`. case parameter `dg_list` given, give full list diagnoses. d_population `data.frame` containing baseline population data, including `ID`, `DATE_BIRTH`, `DATE_DEATH`, `DATE_MIGRATION`. Created function `classify_population()`. var_age_start Numeric. Age (years) start follow-(e.g., 50). dg_list Optional named list. element string diagnosis groupings (e.g., `\"hip+forearm+humerus\"`). `NA`, default \"normal\" procedure applied. censoring_date `Date` object indicating administrative censoring (e.g., `\"2022-12-31\"`). limits Numeric vector length two. Optional plotting analysis limits, default `c(0.3, 3)`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"`data.frame` summarizing person-years (`pyrs`), event counts (`Death`), optional diagnosis counts across exposure categories (`caika`) age groups.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"function: Calculates first exposure response dates per individual. Computes time intervals exposure response. Splits follow-time using `heaven::lexisSeq()` `heaven::lexisTwo()`. Categorizes person-time pre-defined exposure windows (e.g., `<1y`, `1-4y`, `5-9y`, etc.). Optionally aggregates response diagnoses using `dg_list` expressions. Filters follow-start `var_age_start` (e.g., 50 years).","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Person-Time and Event Data for SIR/IRR Calculations — pirr_data","text":"","code":"if (FALSE) { # \\dontrun{ result <- pirr_data(   d_exposure = exposure_data,   d_response = response_data,   d_population = population_data,   var_age_start = 50,   censoring_date = as.Date(\"2023-12-31\") ) } # } if (FALSE) { # \\dontrun{ result <- pirr_data(   d_exposure = exposure_data,   d_response = diagnoses %>% filter(DGREG == \"FRACTURES\" ),   d_population = dpop,   dg_list = list(any_fracture = \"ankle+forearm+hip+humerus+vertebral\",               ostheoporotic = \"forearm+hip+humerus+vertebral\"),   var_age_start = 50,   censoring_date = as.Date(\"2023-12-31\") ) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"function runs Poisson regression models using splines age compares effects two time-related variables (`caika` `cever`) binary outcome variable found dataset. returns model-based predictions, summary tables, plots outcome.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"","code":"pirr_results(adat, colors = c(\"#5BC0DE\", \"#D9534F\"), limits = c(0.3, 3))"},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"adat data frame containing data. Must include columns `Age`, `caika`, `pyrs`, `cever`, least one binary outcome variable (e.g., disease flags). Created function `pirr_data()`. colors character vector two hex colors plotting binary outcome levels age vs exposure plots. Default c(\"#5BC0DE\", \"#D9534F\"). limits numeric vector two values specifying y-axis limits (log10 scale) SIR plots. Default c(0.3, 3).","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"named list results, one element per binary outcome variable. element list containing: table tibble summary statistics model predictions per level `caika` `cever`. plot1 ggplot object log-scale SIR across `caika` `cever`. plot2 ggplot object showing adjusted exposure Age response status.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"binary outcome, two Poisson regression models fitted: One using `caika` (calendar period) main time variable One using `cever` (time since event similar) models adjust age using restricted cubic splines use log(pyrs) offset. Standard errors heteroskedasticity-consistent (HC0). Predictions made Age = 70 base rate 10,000 person-years.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/pirr_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PIRR-style modeling and summary plots for multiple binary outcomes — pirr_results","text":"","code":"# Example usage with simulated data # results <- pirr_results(adat = my_data)"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"Visualizes age distribution time first diagnosis either exposure response group, optionally including subgroup breakdowns. Intended use population-level health registry data.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"","code":"plot_age_distribution(   data,   group = \"exposure\",   subgroups = FALSE,   colors = c(\"#5BC0DE\", \"#D9534F\"),   colors_shade = c(\"#5BC0DE66\", \"#D9534F66\") )"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"data data frame containing following columns: - `ID`: Unique identifier individuals. - `exp.AGE_DG`: Age first diagnosis exposure group. - `exp.GROUP`: Group label (`\"exposure\"` `\"response\"`). - `resp.AGE_DG`: Age first diagnosis response group. - `resp.GROUP`: Group label (`\"exposure\"` `\"response\"`). group Character. Specifies group plot: either `\"exposure\"` `\"response\"`. Determines AGE_DG GROUP columns used. subgroups Logical. `TRUE`, age distribution split opposite group (e.g., response subgroups within exposure group). colors Character vector two colors used plotting. First `\"exposure\"`, second `\"response\"`. colors_shade Character vector two hex color values (transparency) used outline bars. First `\"exposure\"`, second `\"response\"`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"`ggplot` object showing age distribution bar chart. used Shiny application, plot wrapped progress bar using `withProgress()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"function renames filters appropriate AGE GROUP columns based selected `group`. `subgroups = TRUE`, groups data `GROUP` opposite group (used `SUBGROUP`) plotting. Color selection automatically handled based `group` argument, using corresponding color shade `colors` `colors_shade`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_age_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Age Distribution at First Diagnosis for Exposure or Response Group — plot_age_distribution","text":"","code":"if (FALSE) { # \\dontrun{ plot_age_distribution(data = my_data, group = \"exposure\") plot_age_distribution(data = my_data, group = \"response\", subgroups = TRUE) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_diagnoses_src.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Venn Diagram of Diagnoses by Source — plot_diagnoses_src","title":"Plot Venn Diagram of Diagnoses by Source — plot_diagnoses_src","text":"Creates Venn diagram showing overlaps diagnosis sources. Optionally selects first source per ID one per ID per source.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_diagnoses_src.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Venn Diagram of Diagnoses by Source — plot_diagnoses_src","text":"","code":"plot_diagnoses_src(data, per_source = FALSE)"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_diagnoses_src.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Venn Diagram of Diagnoses by Source — plot_diagnoses_src","text":"data data.frame. dataset containing diagnosis records least columns ID, SRC, DATE. can get function 'search_diagnoses()' per_source logical. FALSE (default), uses first source per ID. TRUE, includes one record per source per ID.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_diagnoses_src.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Venn Diagram of Diagnoses by Source — plot_diagnoses_src","text":"ggplot object Venn diagram.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"Creates radar chart visualization ICD-10 diagnosis class distributions across exposure groups. Typically used output `classify_icd10_profile()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"","code":"plot_health_icd10_profile(   data,   colors_exposure_groups = c(\"#5BC0DE\", \"#D9534F\"),   colors_exposure_groups_shade = c(\"#5BC0DE66\", \"#D9534F66\") )"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"data data frame wide format returned `classify_icd10_profile()`, exposure group rows (e.g., \"exposure\", \"exposure\") ICD-10 classes columns. first two rows must artificial \"Max\" \"Min\" rows values 100 0 scaling radar chart. colors_exposure_groups character vector base colors (hex codes) used exposure groups. Defaults `c(\"#5BC0DE\", \"#D9534F\")`. colors_exposure_groups_shade character vector semi-transparent versions base colors, used shaded area radar chart. Defaults `c(\"#5BC0DE66\", \"#D9534F66\")`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"return value. function creates radar chart plot current graphics device.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"function: - Uses `fmsb::radarchart()` function draw chart - Draws one polygon per exposure group colored borders shaded fills - Adds custom legend matching group names colors chart automatically displayed custom layout, axis labels, color styling. called within Shiny app, progress bar shown using `withProgress()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_health_icd10_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Health ICD-10 Profile Using Radar Chart — plot_health_icd10_profile","text":"","code":"if (FALSE) { # \\dontrun{ data_final <- classify_icd10_profile(data = dpop, diagnoses = diagnoses,                                      exposure_icd10 = \"^E11\",                                      exposure_src = c(\"hilmo\", \"avohilmo\")) plot_health_icd10_profile(data_final) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"Creates horizontal bar plot visualize differences ICD-10 diagnosis percentages exposure non-exposure groups, filtered specified percentage difference threshold.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"","code":"plot_icd10_diff_by_exposure(   data,   limit = 10,   colors = c(\"#5BC0DE66\", \"#D9534F66\") )"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"data data frame containing ICD-10 comparison results, typically produced tbl_icd10_diff_by_exposure. Must include columns: `ICD10_3LETTERS`, `exposure_group_pct`, `no_exposure_group_pct`, `diff_pct`. limit Numeric value (default = 10). diagnoses group percentage difference greater threshold plotted. colors character vector two color values (optional alpha), used exposure -exposure group bars respectively. Defaults `c(\"#5BC0DE66\", \"#D9534F66\")`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"`ggplot2` object showing grouped horizontal bar chart selected ICD-10 diagnosis codes, comparing exposure -exposure group percentages.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"function filters ICD-10 codes include absolute difference diagnosis prevalence (`diff_pct`) exceeds specified threshold. plot flips coordinate system display diagnoses vertically better readability. Colors manually assigned visual clarity can customized. plot uses `hrbrthemes::theme_ipsum_rc()` theme. function supports integration Shiny shows progress via `withProgress()` `.safe_inc_progress()` inside Shiny app.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_icd10_diff_by_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar Plot of ICD-10 Diagnosis Differences Between Exposure Groups — plot_icd10_diff_by_exposure","text":"","code":"if (FALSE) { # \\dontrun{ tbl <- tbl_icd10_diff_by_exposure(   data = dpop,   diagnoses = diagnoses,   exposure_icd10 = \"^E11\",   exposure_src = c(\"hilmo\", \"avohilmo\") )  plot_icd10_diff_by_exposure(tbl, limit = 5) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Competing Risks Survival Curve — plot_survival_cr","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"Plots cumulative incidence function long-format dataset using competing risks model.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"","code":"plot_survival_cr(data, colors = c(\"#5CB85C\", \"#343A40\"))"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"data data frame long format following required columns: ID Subject ID name Type event: must include `\"diagnose\"` response, `\"dead\"` death, others treated censoring value Time (days) exposure event colors character vector color hex codes use plotted event types. Default `c(\"#5CB85C\", \"#343A40\")`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"`ggplot2` object showing cumulative incidence curves competing risks.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"Internally converts event types status codes competing risks analysis: 1 = diagnose (response) 2 = dead 3 = censored Uses `cuminc()` `cmprsk` package visualizes results using `ggcompetingrisks()`. Designed run interactive Shiny environments, using `.safe_inc_progress()` optional progress updates.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_cr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Competing Risks Survival Curve — plot_survival_cr","text":"","code":"if (FALSE) { # \\dontrun{ cr_plot <- plot_survival_cr(data = long_surv_df) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"Plots overall Kaplan-Meier survival curve long-format survival dataset              containing response, censoring, death events.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"","code":"plot_survival_km(data)"},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"data data frame long format following required columns: ID Subject ID name Type event: must include `\"diagnose\"` response; values treated censored value Time (days) exposure event","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"Kaplan-Meier survival curve plotted using base R `plot()` function.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"Internally converts event types binary (1 = diagnose, 0 = ), constructs `Surv` object, fits overall survival model using `survfit()`. Designed used interactively Shiny optional progress feedback via `.safe_inc_progress()` `withProgress()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/plot_survival_km.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Kaplan-Meier Survival Curve (Overall) — plot_survival_km","text":"","code":"if (FALSE) { # \\dontrun{ km_plot <- plot_survival_km(data = long_surv_df) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_3letters.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","title":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","text":"Extracts first three characters ICD-10 diagnosis code coding system ICD-10.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_3letters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","text":"","code":"recode_icd10_3letters(DG, DGREG = DGREG)"},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_3letters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","text":"DG character vector diagnosis codes. DGREG character scalar vector indicating diagnosis coding system. Expected value \"ICD10\".","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_3letters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","text":"character vector first three letters ICD-10 codes, `NA` `DGREG` \"ICD10\".","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_3letters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode diagnosis code to ICD-10 three-letter format — recode_icd10_3letters","text":"","code":"diagnoses <- diagnoses_raw |>  dplyr::mutate(    ICD10_3LETTERS = recode_icd10_3letters(DG, DGREG = DGREG),  ) #> Error: object 'diagnoses_raw' not found"},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","title":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","text":"Maps 3-letter ICD-10 codes standard ICD-10 chapter ranges (e.g., \"A00–B99\", \"C00–D48\").","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","text":"","code":"recode_icd10_class(ICD10_3LETTERS, DGREG = DGREG)"},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","text":"ICD10_3LETTERS character vector 3-letter ICD-10 codes. DGREG character scalar vector indicating diagnosis coding system. Expected value \"ICD10\".","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","text":"character vector indicating ICD-10 classification range, `NA` `DGREG` \"ICD10\".","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/recode_icd10_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode ICD-10 3-letter codes into broad classification groups — recode_icd10_class","text":"","code":"diagnoses <- diagnoses_raw |>  dplyr::mutate(    ICD10_3LETTERS = recode_icd10_3letters(DG, DGREG = DGREG),    ICD10_CLASS = recode_icd10_class(ICD10_3LETTERS, DGREG = DGREG)  ) #> Error: object 'diagnoses_raw' not found"},{"path":"https://janikmiet.github.io/healthpopR/reference/search_diagnoses.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Diagnoses by ICD Version and Source — search_diagnoses","title":"Search Diagnoses by ICD Version and Source — search_diagnoses","text":"Retrieves diagnosis records dataset based ICD-10, ICD-9, ICD-8 codes selected data sources.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/search_diagnoses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Diagnoses by ICD Version and Source — search_diagnoses","text":"","code":"search_diagnoses(   regex_icd10 = \"\",   regex_icd9 = \"\",   regex_icd8 = \"\",   registry_source = c(\"\"),   regex_extra = \"\",   src_extra = \"\",   data_diagnoses = diagnoses )"},{"path":"https://janikmiet.github.io/healthpopR/reference/search_diagnoses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Diagnoses by ICD Version and Source — search_diagnoses","text":"regex_icd10 character. Regular expression pattern ICD-10 diagnoses. regex_icd9 character. Regular expression pattern ICD-9 diagnoses. regex_icd8 character. Regular expression pattern ICD-8 diagnoses. registry_source character vector. Data sources include (e.g., \"avohilmo\", \"hilmo\"). regex_extra character. Optional regular expression diagnosis formats (currently implemented). src_extra character. Optional source extra diagnoses (currently implemented). data_diagnoses data.frame. Diagnosis dataset search. Must include columns: ID, DGREG, SRC, DATE, DG, ICD10_CLASS, ICD10_3LETTERS, AGE.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/search_diagnoses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Diagnoses by ICD Version and Source — search_diagnoses","text":"tibble containing matched diagnosis records sorted ID, registry, date.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/search_diagnoses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Diagnoses by ICD Version and Source — search_diagnoses","text":"","code":"if (FALSE) { # \\dontrun{   search_diagnoses(regex_icd10 = \"^I2\", registry_source = c(\"hilmo\", \"avohilmo\"), data_diagnoses = diagnoses) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_crosstabulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","title":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","text":"Generates crosstabulation exposure response variables given dataset, formatted either viewer display Word document output.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_crosstabulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","text":"","code":"summary_exp_resp_crosstabulation(data, output = \"viewer\")"},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_crosstabulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","text":"data data frame containing least two columns: `exposure` `response`. output Character string specifying output format. Options : `\"viewer\"` (default): Shows interactive table RStudio Viewer. `\"docx\"`: Returns `flextable` object use Word document reporting.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_crosstabulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","text":"`output = \"docx\"`, returns `flextable` object can passed   [officer::body_add_flextable()]. Otherwise, prints table RStudio Viewer.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_crosstabulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Crosstabulation of Exposure and Response Diagnoses — summary_exp_resp_crosstabulation","text":"","code":"if (FALSE) { # \\dontrun{   # Example data   df <- data.frame(     exposure = sample(c(0, 1), 100, replace = TRUE),     response = sample(c(0, 1), 100, replace = TRUE)   )   summary_exp_resp_crosstabulation(df, output = \"viewer\")   ft <- summary_exp_resp_crosstabulation(df, output = \"docx\") } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"Summarizes temporal relationship exposure response events individuals exposure response diagnosis.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"","code":"summary_exp_resp_order(data)"},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"data data frame containing least following columns: exposure: Binary indicator (0/1) exposure. response: Binary indicator (0/1) response. exp.DATE: Date exposure. resp.DATE: Date response.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"tibble columns: exp_resp factor indicating exposure-response temporal relationship. n Count cases category. percentage Percentage total cases category.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"Categorizes relationship : \"Exposure < Response\" exposure occurred response, \"Exposure == Response\" occurred date, \"Exposure > Response\" exposure occurred response. function intended use shiny applications supports progress indication. used shiny session, progress displayed `withProgress()`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/summary_exp_resp_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Exposure and Response Timing Order — summary_exp_resp_order","text":"","code":"if (FALSE) { # \\dontrun{   df <- data.frame(     exposure = sample(0:1, 100, replace = TRUE),     response = sample(0:1, 100, replace = TRUE),     DATE = sample(seq(as.Date(\"2020-01-01\"), as.Date(\"2020-12-31\"), by = \"day\"), 100, replace = TRUE),     resp.DATE = sample(seq(as.Date(\"2020-01-01\"), as.Date(\"2020-12-31\"), by = \"day\"), 100, replace = TRUE)   )   summary_exp_resp_order(df) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"Creates summary table population counts age statistics (minimum, median, mean, maximum) either \"exposure\" \"response\" group. Optionally, can also include subgroups detailed breakdown.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"","code":"table_age_distribution(data, group = \"exposure\", subgroups = FALSE)"},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"data data frame containing columns `exp.GROUP`, `resp.GROUP`, `exp.AGE_DG`, `resp.AGE_DG`. expected represent exposure/response group labels ages diagnosis. group character string, either `\"exposure\"` `\"response\"`, indicating group summarize. Defaults `\"exposure\"`. subgroups Logical. `TRUE`, adds subgroup statistics (cross-group summaries). Defaults `FALSE`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"data frame summarizing population size (`pop_n`) age statistics: pop_n - Population count age_min - Minimum age diagnosis age_median - Median age diagnosis age_mean - Mean age diagnosis age_max - Maximum age diagnosis `subgroups = TRUE`, additional \"\" row summarizes entire group.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"function intended use interactive Shiny contexts. utilizes `.safe_inc_progress()` update progress computation.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_age_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Age Distribution for Exposure or Response Groups — table_age_distribution","text":"","code":"if (FALSE) { # \\dontrun{ table_age_distribution(mydata, group = \"response\", subgroups = TRUE) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Table of Diagnoses by Group — table_summary_diagnoses","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"Generates summary table diagnoses within specified group (`\"exposure\"` `\"response\"`), including counts unique patients, total diagnosis cases, percentage group, diagnosis descriptions. Diagnoses fewer threshold number patients combined single \"Rest diagnoses\" row comply data protection principles.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"","code":"table_summary_diagnoses(data, group = \"exposure\", sum_small_groups = 6)"},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"data data frame containing least columns: `ID`, `DG`, `DGREG`. group Character string. Either `\"exposure\"` `\"response\"`. Determines diagnosis group summarize. Defaults `\"exposure\"`. sum_small_groups Integer. Diagnoses fewer patients threshold grouped single summary row. Must 2 9999. Default 6.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"data frame following columns: DG Diagnosis group code DGREG Diagnosis registry group patients Number unique patients group diagnosis cases Total number diagnosis entries group_pct Percentage group diagnosis DESC Diagnosis description","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"called within Shiny app, progress indicators displayed using `withProgress()`. function uses `.safe_inc_progress()` `.capitalize()`, must defined elsewhere package. lookup table `data_codes` must available environment must include columns `DG` `DESC`.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/table_summary_diagnoses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Table of Diagnoses by Group — table_summary_diagnoses","text":"","code":"if (FALSE) { # \\dontrun{ table_summary_diagnoses(data = exposure_diagnoses, group = \"exposure\", sum_small_groups = 6) } # }"},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"Calculates compares prevalence top ICD-10 diagnosis codes (3-letter level) exposure non-exposure populations. Designed highlight diagnostic differences across groups excluding exposure-defining ICD-10 codes.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"","code":"tbl_icd10_diff_by_exposure(data, diagnoses, exposure_icd10, exposure_src)"},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"data data frame least `ID` `exp.GROUP` columns, `exp.GROUP` include `\"exposure\"` `\"exposure\"` values. diagnoses data frame containing patient diagnosis records. Must include least columns: `ID`, `DGREG`, `DG`, `ICD10_3LETTERS`, `SRC`. exposure_icd10 regular expression string defining ICD-10 pattern used classify exposure. Diagnoses matching pattern excluded analysis. exposure_src character vector source systems (e.g., `c(\"hilmo\", \"avohilmo\")`) include diagnosis filtering.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"data frame summarizing: ICD10_3LETTERS ICD-10 3-letter code total_patients Total patients across exposure groups diagnosis exposure_group_patients Number patients exposure group diagnosis exposure_group_pct Percent exposure group diagnosis no_exposure_group_patients Number patients -exposure group diagnosis no_exposure_group_pct Percent -exposure group diagnosis diff_pct Difference percentage points groups (exposure minus exposure) DESC ICD-10 code description (`data_codes`)","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"function useful summarizing diagnostic differences exposed unexposed groups. excludes diagnoses matching exposure ICD-10 pattern avoid circularity. Internally uses `.safe_inc_progress()` progress tracking integrates Shiny's `withProgress()` called running Shiny session. **Note**: `data_codes` object must available global environment within package, must contain `CODECLASS == \"ICD10\"`, `DG`, `DESC` columns.","code":""},{"path":"https://janikmiet.github.io/healthpopR/reference/tbl_icd10_diff_by_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare ICD-10 Diagnoses Between Exposure Groups — tbl_icd10_diff_by_exposure","text":"","code":"if (FALSE) { # \\dontrun{ tbl <- tbl_icd10_diff_by_exposure(   data = dpop,   diagnoses = diagnoses,   exposure_icd10 = \"^E11\",   exposure_src = c(\"hilmo\", \"avohilmo\") ) head(tbl) } # }"}]
